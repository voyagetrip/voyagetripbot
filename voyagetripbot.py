
from telegram import ReplyKeyboardMarkup, Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, ConversationHandler

BOT_TOKEN = '7209793844:AAHk1ilKgHRMbhbcDI1hZD7hFVowtYwHiR4'
ADMIN_CHAT_ID = 8207687995

LANGUAGE, NAME, PHONE, COUNTRY, DATE = range(5)
user_data = {}

def start(update: Update, context: CallbackContext):
    reply_keyboard = [['–†—É—Å—Å–∫–∏–π üá∑üá∫', 'O‚Äòzbekcha üá∫üáø', 'English üá¨üáß']]
    update.message.reply_text(
        "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Tilni tanlang / Choose your language:",
        reply_markup=ReplyKeyboardMarkup(reply_keyboard, one_time_keyboard=True))
    return LANGUAGE

def language(update: Update, context: CallbackContext):
    lang = update.message.text
    user_data[update.message.chat_id] = {'lang': lang}
    if "–†—É—Å—Å–∫–∏–π" in lang:
        update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
    elif "O‚Äòzbekcha" in lang:
        update.message.reply_text("Iltimos, ismingizni kiriting:")
    else:
        update.message.reply_text("Please enter your name:")
    return NAME

def name(update: Update, context: CallbackContext):
    user_data[update.message.chat_id]['name'] = update.message.text
    lang = user_data[update.message.chat_id]['lang']
    if "–†—É—Å—Å–∫–∏–π" in lang:
        update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
    elif "O‚Äòzbekcha" in lang:
        update.message.reply_text("Telefon raqamingizni kiriting:")
    else:
        update.message.reply_text("Enter your phone number:")
    return PHONE

def phone(update: Update, context: CallbackContext):
    user_data[update.message.chat_id]['phone'] = update.message.text
    lang = user_data[update.message.chat_id]['lang']
    if "–†—É—Å—Å–∫–∏–π" in lang:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–µ—Ö–∞—Ç—å:")
    elif "O‚Äòzbekcha" in lang:
        update.message.reply_text("Qaysi mamlakatga borishni xohlaysiz?")
    else:
        update.message.reply_text("Which country do you want to travel to?")
    return COUNTRY

def country(update: Update, context: CallbackContext):
    user_data[update.message.chat_id]['country'] = update.message.text
    lang = user_data[update.message.chat_id]['lang']
    if "–†—É—Å—Å–∫–∏–π" in lang:
        update.message.reply_text("–£–∫–∞–∂–∏—Ç–µ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º—É—é –¥–∞—Ç—É –ø–æ–µ–∑–¥–∫–∏:")
    elif "O‚Äòzbekcha" in lang:
        update.message.reply_text("Sayohat sanasini kiriting:")
    else:
        update.message.reply_text("Enter your intended travel date:")
    return DATE

def date(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    user_data[chat_id]['date'] = update.message.text
    data = user_data[chat_id]

    message = (
        f"üì• –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:\n\n"
        f"üë§ –ò–º—è: {data['name']}\n"
        f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {data['phone']}\n"
        f"üåç –°—Ç—Ä–∞–Ω–∞: {data['country']}\n"
        f"üìÖ –î–∞—Ç–∞: {data['date']}\n"
        f"üåê –Ø–∑—ã–∫: {data['lang']}"
    )

    context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message)
    update.message.reply_text("‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    return ConversationHandler.END

def cancel(update: Update, context: CallbackContext):
    update.message.reply_text("–ü—Ä–æ—Ü–µ—Å—Å –æ—Ç–º–µ–Ω—ë–Ω.")
    return ConversationHandler.END

def main():
    updater = Updater(BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', start)],
        states={
            LANGUAGE: [MessageHandler(Filters.text & ~Filters.command, language)],
            NAME: [MessageHandler(Filters.text & ~Filters.command, name)],
            PHONE: [MessageHandler(Filters.text & ~Filters.command, phone)],
            COUNTRY: [MessageHandler(Filters.text & ~Filters.command, country)],
            DATE: [MessageHandler(Filters.text & ~Filters.command, date)],
        },
        fallbacks=[CommandHandler('cancel', cancel)]
    )

    dp.add_handler(conv_handler)
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
